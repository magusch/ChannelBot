# -*- coding: utf-8 -*-
import datetime

from openai import OpenAI

from .dsn_parameters import DSNParameters


class OpenAIHelper:
    def __init__(self):
        self.client = OpenAI()
        self.answer = None
        param = DSNParameters()
        self.system_message = param.site_parameters('openai_system_message', last=1)
        self.user_message = param.site_parameters('openai_user_message', last=1)
        self.openai_model = param.site_parameters('openai_model', last=1) or 'gpt-4o'
        print(self.system_message)

    def refactor_post(self, event):
        if self.system_message is not None:
            system_message = self.system_message
        else:
            system_message = "–¢—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä-–∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–∞ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ. –£ –Ω–∞—Å –µ—Å—Ç—å —Å—ã—Ä–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –µ—ë –¥–ª—è –ø–æ—Å—Ç–∞."

        if self.user_message is not None:
            user_message = self.user_message
        else:
            user_message = """–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç, –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –¥—Ä—É–≥—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º:
                 –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –¥–∞—Ç—ã –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –º–µ—Å—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø–æ–Ω—è—Ç—å –∫–∞–∫–æ–π —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–ª–µ–∫—Ü–∏—è, –∫–∏–Ω–æ–ø–æ–∫–∞–∑, –∫–æ–Ω—Ü–µ—Ä—Ç, —Ñ–µ—Å—Ç–∏–≤–∞–ª—å –∏ –¥—Ä—É–≥–∏–µ) (–Ω–∞ –∫–∏—Ä–∏–ª–∏—Ü–µ), –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–∞ –∫–∏—Ä–∏–ª–∏—Ü–µ –Ω—É–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –∫–∞–≤—ã—á–∫–∏, –µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü–µ —Ç–æ –∫–∞–≤—ã—á–∫–∏ –Ω–µ –Ω—É–∂–Ω—ã. –î–æ–±–∞–≤–∏—Ç—å –∫–∞–∫–æ–µ-–Ω–∏–±—É–¥—å —è—Ä–∫–æ–µ –∏ –Ω–µ–æ–±—ã—á–Ω–æ–µ —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ –ø–æ —Å–º—ã—Å–ª—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ª—é–±–æ–µ. –í –∫–æ–Ω–µ—á–Ω–æ–º –∏—Ç–æ–≥–µ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫ –ø–æ —à–∞–±–ª–æ–Ω—É "<–≠–ú–û–î–ó–ò> <–¢–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è> <–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è>". –ü—Ä–∏–º–µ—Ä (üöÄ –õ–µ–∫—Ü–∏—è ¬´–ü–æ–∫–æ—Ä–µ–Ω–∏–µ –∫–æ—Å–º–æ—Å–∞ –≤ –°–°–°–†¬ª).
                 –¢–µ–∫—Å—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–æ –ø–æ–Ω—è—Ç—å —Å—É—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –∑–∞–≤–ª–µ—á—å —á–∏—Ç–∞—Ç–µ–ª–µ–π. –ù–µ –¥–µ–ª–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏ —Å—Ç—Ä–æ–≥–∏–º. –¢–∞–∫–∂–µ —Ç–µ–∫—Å—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–∞–∫–∏–µ-—Ç–æ —Ç–æ—á–Ω—ã–µ –¥–∞—Ç—ã, –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏—Ö –≤ —É–∫–∞–∑–∞–Ω–∏—è –¥–Ω–µ–π –Ω–µ–¥–µ–ª—å –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–∞–∑–¥–Ω–∏–∫–∞. –£–±—Ä–∞—Ç—å –≤—Å–µ –Ω–µ–Ω—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏, —Å–ø–µ—Ü-—Å–∏–º–≤–æ–ª—ã –∏ –¥—Ä—É–≥–∏–µ –º–µ—à–∞—é—â–∏–µ –≤–µ—â–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞. –ò–∑ –≤—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤—ã–¥–µ–ª–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –º—ã—Å–ª—å –∏ –≤—ã–ª–æ–∂–∏—Ç—å –µ—ë –≤ –æ–¥–Ω–æ–º –∞–±–∑–∞—Ü–µ (2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è). –°—Ç–∏–ª—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–ø—Ä–æ—â—ë–Ω–Ω—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º, –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–ø–µ–ª—å–∫—É –ª—é–±–æ–ø—ã—Ç—Å–≤–∞ –µ—Å–ª–∏ –æ–Ω–æ –ø—Ä–∏—Å—É—Ç—Å–æ–≤–æ–≤–∞–ª–æ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Ç–µ–∫—Å—Ç–µ. –¢–µ–∫—Å—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞. –í—Å–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∞—Ç—å –≤ —Ç—Ä–µ—Ç—å–µ –ª–∏—Ü–æ ("–æ–Ω–∏ —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞–ª–∏"). –í —Ç–µ–∫—Å—Ç–µ —Ç–∞–∫–∂–µ –Ω–µ –Ω–∞–¥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–∏–ø—É –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è, –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Ö–æ–¥–∞, –µ—Å–ª–∏ –Ω–µ—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –ø–æ—Å—Ç–µ (–∫ –ø—Ä–∏–º–µ—Ä—É –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π)."""

        event_info = "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ:\n"
        for key, value in event.items():
            event_info += f"{key} => {value}; \n"

        completion = self.client.chat.completions.create(
            model=self.openai_model,
            messages=[
                {"role": "system",
                 "content": system_message
                 },
                {"role": "user",
                 "content":
                 user_message +
                     f"""–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞. –í—ã–¥–µ–ª–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã—Ö —Ç–µ–≥–æ–≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–¥–∞—Ç—å –≤ –≤–∏–¥–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á—ë—Ç–∫–æ –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ (–∑–∞–≥–æ–ª–æ–≤–æ–∫, —Ç–µ–∫—Å—Ç, –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –∞–¥—Ä–µ—Å, —Å—Ç–æ–∏–º–æ—Å—Ç—å, –¥–∞—Ç–∞, —Å—Å—ã–ª–∫–∞, from_date, to_date) –∑–∞—Ç–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ –≤–∏–¥–µ '=>', —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –≤ –∫–æ–Ω—Ü–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ—á–∫—É —Å –∑–∞–ø—è—Ç–æ–π (;).
                     –ï—Å–ª–∏ –∫–∞–∫–æ–π-–ª–∏–±–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç—É –≤ —Ç–µ–∫—Å—Ç–µ –∏–ª–∏ –æ–Ω–∞ —Ä–∞—Å–ø–ª—ã–≤—á–∏—Ç–∞, —Ç–æ –≤–∫–ª—é—á–∞—Ç—å –≤ –æ—Ç–≤–µ—Ç –µ—ë –Ω–µ –Ω—É–∂–Ω–æ. –ü—Ä–µ–¥–ø–æ–ª–æ–≥–∞—Ç—å –∏–ª–∏ –∏—Å–∫–∞—Ç—å –≥–¥–µ-—Ç–æ –µ—â—ë —Ç–æ–∂–µ –Ω–µ –Ω–∞–¥–æ. 
                     –¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –≤–∏–¥–µ: —Ü–∏—Ñ—Ä—ã –∏ –≤–∞–ª—é—Ç—ã, –µ—Å–ª–∏ –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ —É—Å–ª–æ–≤–∏—è –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, —Ç–æ —Å—Ç–∞–≤–∏—Ç—å —á–µ—Ä—Ç—É / –∏ —Ç–∞–∫–∂–µ –≤–ø–∏—Å—ã–≤–∞—Ç—å –µ—â—ë —Ü–µ–Ω—É. –ï—Å–ª–∏ –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Å–æ–∫—Ä–∞—â–∞—Ç—å –µ—ë –∏ —Å—Ç–∞–≤–∏—Ç—å –≤ —Å–∫–æ–±–∫—É –ø–æ—Å–ª–µ —Ü–µ–Ω—ã. –ï—Å–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ ‚Äì –ë–µ—Å–ø–ª–∞—Ç–Ω–æ. 
                     –ê–¥—Ä–µ—Å –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—Ç–∞ (—Ç–µ–∞—Ç—Ä, –±–∞—Ä, –º—É–∑–µ–π –∏ —Ç–¥), –¥–∞–ª—å—à–µ –∞–¥—Ä–µ—Å, –≤ –∫–æ–Ω—Ü–µ –º–µ—Ç—Ä–æ –µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω–æ. –ù–∞–∑–≤–∞–Ω–∏—è –Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –∏ —Ä–∞–π–æ–Ω–∞ (–≥–æ—Ä–æ–¥, –æ–±–ª–∞—Å—Ç—å, —Ä–µ—Å–ø—É–±–ª–∏–∫–∞) –≤—Å—Ç–∞–≤–ª—è—Ç—å –Ω–µ –Ω–∞–¥–æ.
                     –î–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ '%Y-%m-%dT%h:%m' –±–µ–∑ –∫–∞–∫–æ–π-–ª–∏–±–æ –µ—â—ë –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –°–µ–π—á–∞—Å {datetime.date.today().year} –≥–æ–¥. –¢–∞–∫–∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—á–∏—Ç—ã–≤–∞—Ç—å —á—Ç–æ –∑–∞–¥–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –≤ utc+3 —Ç–∞–π–º–∑–æ–Ω–µ.
                     –í–∞–∂–Ω–æ: —Ç—ã –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É–≤–µ—Ä–µ–Ω –≤ –Ω–µ–π –∏ –æ–Ω–∞ –µ—Å—Ç—å –≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º –Ω–∏–∂–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏–∏! –í –∫–æ–Ω—Ü–µ –ø—Ä–æ–≤–µ—Ä—å —á—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –æ—Ç–≤–µ—Ç–µ –µ—Å—Ç—å –≤ —Ç–µ–∫—Å—Ç–µ.   
                 {event_info}
                 """}
            ]
        )

        self.answer = completion.choices[0].message.content

        return self.answer

    def parse_gpt_answer(self):
        if self.answer is None:
            return {}
        data = self.answer.split('\n')
        event_data = {}
        for d in data:
            if d.strip() == '':
                continue
            divided = d.split('=>')
            event_data[divided[0].strip().lower()] = divided[-1].strip().replace(';','')

        if '—Ç–µ–∫—Å—Ç' not in event_data or len(event_data['—Ç–µ–∫—Å—Ç'].strip()) < 100:
            event_data['—Ç–µ–∫—Å—Ç'] = self.answer
        event_data['full_answer'] = self.answer
        return event_data

    def new_event_data(self, event):
        replace_phrases = {'—Ç–µ–∫—Å—Ç': 'full_text', '–∑–∞–≥–æ–ª–æ–≤–æ–∫': 'title',
                           '–∫–∞—Ç–µ–≥–æ—Ä–∏—è': 'category', '–¥–∞—Ç–∞': 'from_date',
                           '–∞–¥—Ä–µ—Å': 'address', '—Å—Ç–æ–∏–º–æ—Å—Ç—å': 'price',
                           '—Å—Å—ã–ª–∫–∞': 'url'}
        if self.answer is None:
            self.refactor_post(event)
        ai_event_data = self.parse_gpt_answer()

        ai_event = {}
        for key, new_event_data in ai_event_data.items():
            if key in replace_phrases.keys():
                ai_event[replace_phrases[key]] = new_event_data
            else:
                ai_event[key] = new_event_data
        return ai_event